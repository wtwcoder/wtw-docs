import{_ as t,c as i,m as s,a,t as n,U as p,o as c}from"./chunks/framework.UPTPDIz5.js";const o="/assets/Screenshot_23 (2).0gmEqNn5.jpg",l="/assets/Screenshot_24 (2).UdEsfBPg.jpg",r="/assets/Screenshot_25 (2).hGjBHrdu.jpg",g="/assets/Screenshot_26 (2).oHJtvw1-.jpg",d="/assets/Screenshot_27 (3).wMDdBN9n.jpg",f="/assets/Screenshot_28 (2).6SbKcanG.jpg",u="/assets/Screenshot_29 (2).Qy8uk9Hd.jpg",h="/assets/Screenshot_30 (2).Su57CsjD.jpg",_="/assets/Screenshot_31 (2).rPVXNlvQ.jpg",m="/assets/Screenshot_39 (3).juj16Cvn.jpg",v="/assets/Screenshot_32 (1).Re-xGOBY.jpg",b="/assets/Screenshot_33 (2).icHaVLPY.jpg",k="/assets/Screenshot_34 (2).Qdob59Is.jpg",j="/assets/Screenshot_37 (2).OUIsLFnU.jpg",S="/assets/Screenshot_38 (2).T1iAeGvb.jpg",y="/assets/Screenshot_35 (2).m1XoQBsG.jpg",w="/assets/Screenshot_36 (3).YMQJqC8o.jpg",E=JSON.parse('{"title":"Как изменить внешний вид элемента Select?","description":"","frontmatter":{"title":"Как изменить внешний вид элемента Select?"},"headers":[],"relativePath":"05.instrukcii/webflow/instrukcii/kak-izmenit-vneshnii-vid-elementa-select.md","filePath":"05.instrukcii/webflow/instrukcii/kak-izmenit-vneshnii-vid-elementa-select.md"}'),z={name:"05.instrukcii/webflow/instrukcii/kak-izmenit-vneshnii-vid-elementa-select.md"},q={id:"frontmatter-title",tabindex:"-1"},C=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),$=p('<p>Изменение Select средствами css довольно скудное и не позволяет в полной мере настроить необходимый внешний вид, как раскрывающегося блока выбора, так и списка опций.</p><p>Для решения данных задач существуют различные JS библиотеки, среди которых: <a href="https://select2.org/" target="_blank" rel="noreferrer">select2</a>, <a href="https://selectize.dev/" target="_blank" rel="noreferrer">selectize</a>, <a href="https://jqueryniceselect.hernansartorio.com/" target="_blank" rel="noreferrer">nice select</a> и прочие. В текущей статье, в качестве примера, разберем подключение библиотеки Selectize.js.</p><p>В первую очередь нам необходимо подключить файл стилей и сам скрипт.</p><p>Для этого в блок кода для head вставляем следующую строку:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.14.0/css/selectize.min.css&quot; /&gt;</span></span></code></pre></div><div align="left"><figure><img src="'+o+'" alt=""><figcaption></figcaption></figure></div><p>Далее, в блок перед закрывающим тегом body вставляем:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.14.0/js/selectize.min.js&quot;&gt;&lt;/script&gt;</span></span></code></pre></div><div align="left"><figure><img src="'+l+`" alt=""><figcaption></figcaption></figure></div><div class="warning custom-block"><p class="custom-block-title">Замечание</p><p>Актуальные версии файлов для подключения вы можете найти в <a href="https://selectize.dev/docs/intro" target="_blank" rel="noreferrer">официальной документации</a>.</p></div><p></p><p>Следующим шагом будет инициализация работы нашего скрипта. Для минимального запуска необходимо все в тот же блок, перед закрывающим тегом body, после подключенного ранее скрипта, добавить код:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>  $(function () {</span></span>
<span class="line"><span>    $(&quot;select&quot;).selectize();</span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre></div><div align="left"><figure><img src="`+r+'" alt=""><figcaption></figcaption></figure></div><p>В текущем примере, мы используем тег select, как селектор, за который скрипт будет цепляться при работе. Т.е. в этом случае, он будет работать со всеми элементами select на странице. Если же мы хотим настроить скрипт для какого-то определенного тега, то нам необходимо в данной строке <code>$(&quot;select&quot;).selectize(options);</code> заменить select на наш класс (<code>.class_element</code>) или id элемента (<code>#id_element</code>).</p><p></p><p>После инициализации скрипта, можно выгрузить проект и убедиться в том, что наш селект уже изменился и подключенная библиотека работает.</p><div class="danger custom-block"><p class="custom-block-title">Внимание</p><p>Если этого не произошло, внимательно перепроверьте правильность выполнения предшествующих шагов, а так же актуальность версий файлов.</p></div><p>Итак, вот такой вид имел наш select до подключения скрипта:</p><div align="left"><figure><img src="'+g+'" alt=""><figcaption></figcaption></figure></div><p>А вот так он выглядит теперь:</p><div align="left"><figure><img src="'+d+'" alt=""><figcaption></figcaption></figure></div><p>На первый взгляд, может показаться «<strong>Шеф</strong>, <strong>всё</strong> <strong>пропало</strong>, <strong>всё</strong> <strong>пропало</strong>!». Но нет, это только начало и сейчас мы будем настраивать внешний вид)</p><p></p><p>Первым делом, нам необходимо сбросить все предустановленные параметры для нашего старого селекта.</p><p>Для этого в панели стилей задаем внутренние отступы блока равные нулю (по умолчанию они таковы и есть, но при выгрузке webflow их добавляет, поверьте):</p><div align="left"><figure><img src="'+f+'" alt=""><figcaption></figcaption></figure></div><p>Далее ставим прозрачный фон и убираем обводку:</p><div align="left"><figure><img src="'+u+'" alt=""><figcaption></figcaption></figure></div><p>Проверим как теперь выглядит наш элемент:</p><div align="left"><figure><img src="'+h+'" alt=""><figcaption></figcaption></figure></div><p>Отлично, стандартный select уже не мешает, но и для полного счастья новому еще чего-то не хватает.</p><p>За фон в списке опций нового селета отвечает класс <code>.selectize-dropdown-content</code>. Создадим блок и укажем ему данный класс, после чего в качестве фонового цвета выберем тот, который нам необходим:</p><div align="left"><figure><img src="'+_+`" alt=""><figcaption></figcaption></figure></div><p>Либо, что будет более удобным, пропишем данный свойства в качестве css стилей самостоятельно.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;style&gt;</span></span>
<span class="line"><span>    .selectize-dropdown-content {</span></span>
<span class="line"><span>        background: #cfcfcf;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>&lt;/style&gt;</span></span></code></pre></div><p>И далее вставим их в код для head:</p><div align="left"><figure><img src="`+m+'" alt=""><figcaption></figcaption></figure></div><p>Выгрузим макет и опять посмотрим, что получилось:</p><figure><img src="'+v+`" alt=""><figcaption></figcaption></figure><p>Далее настроим вид активной опции. За нее будут отвечать классы .selectize-dropdown .active. Действуем той же схеме:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.selectize-dropdown .active {</span></span>
<span class="line"><span>    background: #a6a8bc;</span></span>
<span class="line"><span>    color: #fff;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>Тут, для примера и понимания, добавил дополнительно изменение цвета текста.</p><p>Выгружаем. Проверяем результат:</p><div align="left"><figure><img src="`+b+'" alt=""><figcaption></figcaption></figure></div><p>Воспользовавшись консолью разработчика в браузере, вы можете посмотреть на любые иные классы в данной конструкции, и так же, как показано при примерах выше, задать свои стили.</p><div align="left"><figure><img src="'+k+`" alt=""><figcaption></figcaption></figure></div><p>Другим вариантом настройки внешнего вида текущей библиотеки, является использование метки <a href="https://support.1106.ru/spravochnik-wtw/wtw-metki/obshie-metki/specialnye-sluzhebnye/selector" target="_blank" rel="noreferrer">selector</a>, по работе с которой записана отдельная видео инструкция.</p><p></p><p>Отвлечемся от стилизации селекта и вспомним что у нашего скрипта имеется возможность использовать дополнительные настройки.</p><p>Сейчас мы попробуем дать пользователю возможность добавлять свое значение в наш селект прям из своего браузера. Для этого необходимо добавить параметр create:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$(function () {</span></span>
<span class="line"><span>    $(&quot;select&quot;).selectize({</span></span>
<span class="line"><span>        create: true,</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>});</span></span></code></pre></div><p>И вот что мы получим:</p><div><figure><img src="`+j+'" alt=""><figcaption></figcaption></figure><figure><img src="'+S+'" alt=""><figcaption></figcaption></figure></div><p>На самом деле, у библиотеки довольно много настроек и все их рассматривать нет особого смысла, т.к. они описаны в <a href="https://selectize.dev/docs.html" target="_blank" rel="noreferrer">документации</a>.</p><p>Кстати, еще одним приятным бонусом данного скрипта, является возможность использовать красивый выбор нескольких значений. И для этого даже не потребуется прописывать дополнительные настройки. Необходимо всего лишь включить поддержку multiple в настройках селекта в webflow:</p><div align="left"><figure><img src="'+y+'" alt=""><figcaption></figcaption></figure></div><p>Все остальное библиотека сделаем сама:</p><div align="left"><figure><img src="'+w+'" alt=""><figcaption></figcaption></figure></div><p>Вот так, в целом легко и просто, можно преобразовать скучные и однотипные select в живые и отзывчивые элементы.</p>',60);function x(e,V,B,N,P,T){return c(),i("div",null,[s("h1",q,[a(n(e.$frontmatter.title)+" ",1),C]),$])}const G=t(z,[["render",x]]);export{E as __pageData,G as default};
