import{_ as t,c as e,o,U as a}from"./chunks/framework.UPTPDIz5.js";const s="/assets/Untitled (1) (1).74WgLc0J.png",p="/assets/Untitled (2).mYOGY35I.png",v=JSON.parse('{"title":"Какие бывают метки и почему они так называются","description":"","frontmatter":{"title":"Какие бывают метки и почему они так называются"},"headers":[],"relativePath":"01.wtw-metki/vvedenie.md","filePath":"01.wtw-metki/vvedenie.md"}'),i={name:"01.wtw-metki/vvedenie.md"},r=a('<h1 id="введение" tabindex="-1">Введение <a class="header-anchor" href="#введение" aria-label="Permalink to &quot;Введение&quot;">​</a></h1><p>Данная статья будет полезна новичкам, которые только начинают знакомиться с нашей технологией преобразования или как мы называем конвертацией сайта, свёрстанного при помощи Webflow в тему для самой популярной CMS WordPress.</p><p>Основой конвертации является использование меток, которые в качестве дорожной карты показывают конвертеру WTW, что необходимо переписать в коде страницы под WordPress.</p><h4 id="для-начала-необходимо-определиться-что-же-такое-метка" tabindex="-1">Для начала необходимо определиться что же такое метка? <a class="header-anchor" href="#для-начала-необходимо-определиться-что-же-такое-метка" aria-label="Permalink to &quot;Для начала необходимо определиться что же такое метка?&quot;">​</a></h4><p>Само название было придумано в момент создания 1-й версии конвертера для WordPress.</p><p>Задача стояла сделать из статической страницы Webflow сайт с выводом новостей.</p><p>А где как ни в WordPress создавать страницы новостного блога.</p><p>И тут возник вопрос как пометить тот блок, который будет в дальнейшем заголовком или текстом записи? Первое что пришло в голову это использовать кастомные атрибуты, которые есть у каждого элемента на Webflow. Идея оказалась удачной и мы стали думать как назвать эти самые обозначения элементов.</p><p>Т.к. по сути мы делали раз<strong>метку</strong> страницы для создания шаблона новости, то и сами обозначения принято было назвать метками.</p><p>В Конвертере <strong>Webflow To WordPress</strong> (WTW) используется два основных вида меток.</p><p>Первый вид - это метки начинающиеся на <strong>wp_</strong> и второй вид меток, которые начинаются на <strong>f_.</strong></p><h4 id="откуда-берется-такое-разделение" tabindex="-1"><strong>Откуда берется такое разделение?</strong> <a class="header-anchor" href="#откуда-берется-такое-разделение" aria-label="Permalink to &quot;**Откуда берется такое разделение?**&quot;">​</a></h4><p>Изначально WordPress создавался как система для ведения блогов. И для создания статьи в блоге достаточно всего нескольких полей: <em>заголовок, картинка, текст статьи, дата публикации, автор, категория и теги.</em> Именно эти поля были изначально заложены в базу данных WordPress. И все эти поля доступны в админке WordPress сразу после установки.</p><div class="info custom-block"><p class="custom-block-title">Рекомендация</p><p>Примеры меток для основных полей: <a href="./zapisi/polya-zapisei/tekstovye/wp-post_title.html">wp = post_title</a>, <a href="./zapisi/polya-zapisei/tekstovye/wp-post_content.html">wp = post_content</a>, <a href="./zapisi/polya-zapisei/data-i-vremya/wp-post_date.html">wp = post_date</a></p></div><figure><img src="'+s+'" alt=""><figcaption></figcaption></figure><p>Но со временем базового функционала стало не хватать и было принято решение расширить функционал через добавление произвольных полей. Они так же доступны в админке, но их уже нужно включать и настраивать. Базовый интерфейс для этих полей позволяет работать только с текстовыми полями, что не очень удобно. В связи с этим сторонние разработчики стали создавать плагины для управления произвольными полями, которые существенно расширили возможности управления контентом. Добавились поля для выбора изображений, поле галереи, повторители, карты и многое другое.</p><p>В нашей теме на базе Конвертера используется как раз один из таких плагинов - Advanced Custom Fields PRO. Это один из самых популярных плагинов произвольных полей для WordPress.</p><p>И так, подключение произвольных полей производится через метки второго типа, т.е. с приставкой f_.</p><div class="info custom-block"><p class="custom-block-title">Рекомендация</p><p>К примеру текстовое поле подключается через метку <a href="./proizvolnye-polya/polya-zapisei/tekstovye/f_text.html">f_text</a>, поле изображения через метку <a href="./proizvolnye-polya/polya-zapisei/izobrazheniya/f_image.html">f_image</a>, а поле галереи фотографий через метку <a href="./proizvolnye-polya/polya-zapisei/izobrazheniya/f_gallery.html">f_gallery</a></p></div><figure><img src="'+p+'" alt=""><figcaption></figcaption></figure><p>Есть так же разновидности этих меток для таксономий и опций сайта. Которые имеют такие же названия как и для записей, но начинаются с соответствующей приставки в начале названия поля.</p><p>Таксономии - это параметры или характеристики чего либо. Например, категории и теги - это параметры записи блога. А, к примеру вес и размер это параметры товара в магазине.</p><p>Опции сайта - это общие параметры всего сайта. Например, телефон и адрес компании, которые могут быть выведены в футер или шапку сайта.</p><div class="info custom-block"><p class="custom-block-title">Рекомендация</p><p>Пример меток для таксономии: <strong>t_text</strong>, <strong>t_image</strong>. Для опций сайта: <strong>o_text</strong>, <strong>o_image</strong> и т.д.</p></div><p>В этой статье мы кратко ознакомились с видами меток и их назначением.</p>',25),n=[r];function l(c,_,d,f,m,g){return o(),e("div",null,n)}const u=t(i,[["render",l]]);export{v as __pageData,u as default};
