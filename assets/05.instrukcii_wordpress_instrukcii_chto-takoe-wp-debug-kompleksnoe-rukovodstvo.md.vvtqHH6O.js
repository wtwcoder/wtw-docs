import{_ as o,c as s,m as e,a as r,t as a,U as i,o as n}from"./chunks/framework.UPTPDIz5.js";const p="/assets/wp-config-php-file.rFHfX-OG.jpg",g="/assets/vkliuchenije-wp-debug-1.tCKJfcNT.jpg",l="/assets/vkliuchenije-wp-debug-log.PbZUbJyh.jpg",d="/assets/debug-log.UntzDfA2.jpg",c="/assets/wp-debug-display (1).Z-Dag7xU.jpg",E=JSON.parse('{"title":"Что Такое WP DEBUG: Комплексное Руководство","description":"","frontmatter":{"title":"Что Такое WP DEBUG: Комплексное Руководство"},"headers":[],"relativePath":"05.instrukcii/wordpress/instrukcii/chto-takoe-wp-debug-kompleksnoe-rukovodstvo.md","filePath":"05.instrukcii/wordpress/instrukcii/chto-takoe-wp-debug-kompleksnoe-rukovodstvo.md"}'),_={name:"05.instrukcii/wordpress/instrukcii/chto-takoe-wp-debug-kompleksnoe-rukovodstvo.md"},u={id:"frontmatter-title",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),h=i('<p>Включив WP DEBUG (режим отладки) на своём сайте WordPress, вы сможете лучше понять, что происходит с вашим ресурсом, особенно в случае возникновения проблемы. Дебаг также пригодится разработчикам тем или плагинов, которые хотят, чтобы их продукт продвигал непосредственно WordPress.</p><p>Поэтому в этой статье мы расскажем вам всё, что нужно знать о WP DEBUG и о том, как вы можете использовать отладку в разработке вашего сайта.</p><h3 id="зачем-нужен-wp-debug" tabindex="-1">Зачем Нужен WP DEBUG? <a class="header-anchor" href="#зачем-нужен-wp-debug" aria-label="Permalink to &quot;Зачем Нужен WP DEBUG?&quot;">​</a></h3><p>WP_DEBUG — это константа PHP, которая запускает режим отладки в WordPress. Найти её можно в вашем <strong>файле wp-config.php</strong>. По умолчанию дебаг отключен. Включите его, чтобы получить доступ к ряду полезных функций. </p><p>Во-первых, он предоставит вам информацию о том, как воспроизвести проблему. Сохраняя файл журнала, он записывает все действия, происходящие на вашем сайте, и это может помочь в устранении проблемы.</p><p>Во-вторых, <strong>WP_DEBUG</strong> покажет список устаревших функций в релизах тем и плагинов WordPress. Функции помечены как такие, что будут неактивные в будущем. Это уведомление также часто сообщает, какие альтернативы можно использовать вместо этого.</p><p>Ещё одна причина включить режим отладки возникает тогда, когда вы хотите создать собственный плагин или тему. </p><p><a href="https://codex.wordpress.org/ru:Main_Page" target="_blank" rel="noreferrer">WordPress Codex</a> настоятельно рекомендует каждому разработчику использовать WP_DEBUG при создании своего продукта, чтобы в случае возникновения проблемы или предупреждения другой разработчик мог проверить и исправить код.</p><p>Если он не совместим с WP_DEBUG, официальная библиотека инструментов WordPress не одобрит ваш плагин или тему.</p><h3 id="практическое-применение-wp-debug" tabindex="-1">Практическое Применение WP DEBUG <a class="header-anchor" href="#практическое-применение-wp-debug" aria-label="Permalink to &quot;Практическое Применение WP DEBUG&quot;">​</a></h3><p>Объяснив общую идею того, что такое WP_DEBUG, мы рассмотрим, как он может быть использован на практике.</p><h4 id="wp-debug" tabindex="-1">WP_DEBUG <a class="header-anchor" href="#wp-debug" aria-label="Permalink to &quot;WP_DEBUG&quot;">​</a></h4><p>WP_DEBUG находится в файле <strong>wp-config.php</strong> и по умолчанию имеет значение “<strong>false</strong>”. Если вы хотите включить его, вы должны изменить его на “<strong>true</strong>”. Для этого вам понадобится FTP-клиент, например <a href="https://filezilla-project.org/" target="_blank" rel="noreferrer">FileZilla</a> или файловый менеджер, для доступа к файлу.</p><ol><li><p>Найдите файл <strong>wp-config.php</strong> в корневой папке вашего сайта. В нашем примере он находится в <strong>hostinger-dev-9.xyz/public_html/wp-config.php</strong>.</p><div align="left"><figure><img src="'+p+'" alt=""><figcaption></figcaption></figure></div></li><li><p>Откройте его и найдите <code>define( &#39;WP_DEBUG&#39;, false )</code></p><div align="left"><figure><img src="'+g+'" alt=""><figcaption></figcaption></figure></div></li><li><p>Найдя, измените значение “false” на “true”. Затем сохраните файл.</p></li></ol><p>Если в вашем файле <strong>wp-config.php</strong> такого кода нет, вы можете добавить его над строкой <strong>/* That’s all, stop editing! Happy blogging. */</strong>.</p><p>Имейте в виду, что отладка не должна быть включена на живом сайте, потому что этот режим предназначен только для разработки.</p><h4 id="wp-debug-log" tabindex="-1">WP_DEBUG_LOG <a class="header-anchor" href="#wp-debug-log" aria-label="Permalink to &quot;WP_DEBUG_LOG&quot;">​</a></h4><p>Включив WP_DEBUG_LOG, пользователи могут сохранять все ошибки в файле <strong>debug.log</strong>. Эта функция работает вместе с WP_DEBUG и помогает воспроизвести проблемы для устранения неполадок.</p><p>Чтобы включить её, откройте файл <strong>wp-config.php</strong> и введите следующую строку под строкой <strong>define( ‘WP_DEBUG’, true );</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>define(&#39;WP_DEBUG_LOG&#39;, true);</span></span></code></pre></div><div align="left"><figure><img src="'+l+'" alt=""><figcaption></figcaption></figure></div><p>После активации функции файл <strong>debug.log</strong> будет автоматически сохранен в папке <strong>/wp-content/</strong> вашего сайта. Вы можете просмотреть файл непосредственно в браузере.</p><figure><img src="'+d+'" alt=""><figcaption></figcaption></figure><h4 id="wp-debug-display" tabindex="-1">WP_DEBUG_DISPLAY <a class="header-anchor" href="#wp-debug-display" aria-label="Permalink to &quot;WP_DEBUG_DISPLAY&quot;">​</a></h4><p>Вам следует отключить WP_DEBUG_DISPLAY, чтобы сообщения об ошибках не отображались на вашем сайте.</p><p>Каждый раз, когда возникает ошибка, она будет сгенерирована и показана внутри вашего HTML-кода, поскольку в отличие от WP_DEBUG, исходное значение WP_DEBUG_DISPLAY — “<strong>true</strong>”. Измените его на “<strong>false</strong>”, чтобы скрыть все ошибки.</p><p>В случае, если вы не можете найти необходимую строку, вставьте эту строку в файл <strong>wp-config.php</strong> сразу под строкой <strong>define(‘WP_DEBUG’, true);</strong>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>define(&#39;WP_DEBUG_DISPLAY&#39;, false);</span></span></code></pre></div><div align="left"><figure><img src="'+c+'" alt=""><figcaption></figcaption></figure></div><p>Все эти функции: WP_DEBUG, WP_DEBUG_LOG и WP_DEBUG_DISPLAY можно использовать одновременно, чтобы включить отладку, сохранять файл журнала и скрыть все ошибки.</p><h3 id="итоги" tabindex="-1">Итоги <a class="header-anchor" href="#итоги" aria-label="Permalink to &quot;Итоги&quot;">​</a></h3><p>Понимание того, как работает WP_DEBUG, даёт много важных преимуществ как для владельцев сайтов WordPress, так и для разработчиков. Используйте дебаг в процессе разработки сайта, чтобы включить режим отладки, сохранить или скрыть все ошибки. К тому же это очень просто.</p><p>Вот краткое изложение всех шагов, которые нужно сделать, чтобы использовать WP_DEBUG, WP_DEBUG_LOG и WP_DEBUG_DISPLAY:</p><ul><li>WP_DEBUG — найдите файл wp-config.php, и измените значение “<strong>false</strong>” в строке <strong>define( ‘WP_DEBUG’, false );</strong> на “<strong>true</strong>”.</li><li>WP_DEBUG_LOG — добавьте строку <strong>define(‘WP_DEBUG_LOG’, true);</strong> под <strong>define(‘WP_DEBUG’, true);</strong>.</li><li>WP_DEBUG_DISPLAY — введите <strong>define(‘WP_DEBUG_DISPLAY’, false);</strong> под строкой <strong>define(‘WP_DEBUG’, true);</strong>.</li></ul>',34);function P(t,D,G,W,U,b){return n(),s("div",null,[e("h1",u,[r(a(t.$frontmatter.title)+" ",1),f]),h])}const k=o(_,[["render",P]]);export{E as __pageData,k as default};
